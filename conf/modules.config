/*
 * Define modules options
 */

process {

  // Default
  publishDir = [
    path: { "${params.outDir}/${task.process.tokenize(':')[-1].tokenize('_')[0]}" },
    mode: 'copy',
    saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
  ]

  // Fasta
  withName:'getFastaFromURL' {
    publishDir = [
      path: { "${params.outDir}/genome/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = !params.skipFastaProcessing
  }

  withName:'samtoolsFaidx|createSequenceDictionary|getChromSizes|faSize' {
    publishDir = [
      path: { "${params.outDir}/genome/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = !params.skipFastaProcessing
  }

  // GTF
  withName:'getTranscriptome' {
    publishDir = [
      path: { "${params.outDir}/gtf/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
  }

  withName:'getAnnotation|reduceGtf|gtf2bed12|gtf2genes' {
    publishDir = [
      path: { "${params.outDir}/gtf/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = !params.skipGtfProcessing
  }

  withName:'gtf2bed12' {
    publishDir = [
      path: { "${params.outDir}/gtf/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.args= "-genePredExt -ignoreGroupsWithoutExons"
    ext.when = !params.skipGtfProcessing
  }

  withName:'gffreads' {
    publishDir = [
      path: { "${params.outDir}/gtf/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.args = "--keep-exon-attrs -F -T"
    ext.when = !params.skipGtfProcessing
  }

  // Indexes
  withName:'bwaIndex' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') || filename.equals('bwa.log') ? null : filename }
    ]
    ext.when = { params.indexes.contains('bwa') || params.indexes == 'all' }
  }  
  
  withName:'bwamem2Index' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') || filename.equals('bwamem2.log') ? null : filename }
    ]
    ext.when = { params.indexes.contains('bwamem2') || params.indexes == 'all' }
  }  
  
  withName:'dragmapIndex' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') || filename.equals('dragmap.log') ? null : filename }
    ]
    ext.when = {params.indexes.contains('dragmap') || params.indexes == 'all' }
  }
  
  withName:'starIndex' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = { params.indexes.contains('star') || params.indexes == 'all' }
  }

  withName:'bowtie2Index' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = { params.indexes.contains('bowtie2') || params.indexes == 'all' }
  }

  withName:'makeHisat2Splicesites|hisat2Index' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = { params.indexes.contains('hisat2') || params.indexes == 'all' }
  }

  withName:'cellrangerMkGtf|cellrangerMkRef' {
    beforeScript = "export PATH=${params.cellRangerPath}:$PATH"
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = { params.indexes.contains('cellranger') || params.indexes == 'all' }
  }

  withName:'kallistoCorrectFasta|kallistoIndex' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = { params.indexes.contains('kallisto') || params.indexes == 'all' }
  }

  withName:'salmonIndex' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = { params.indexes.contains('salmon') || params.indexes == 'all' }
  }

}
