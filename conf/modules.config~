/*
 * Define modules options
 */

process {

  // Default
  publishDir = [
    path: { "${params.outDir}/${task.process.tokenize(':')[-1].tokenize('_')[0]}" },
    mode: 'copy',
    saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
  ]

  withName:'getFastaFromURL' {
    publishDir = [
      path: { "${params.outDir}/genome/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
  }

  withName:'getTranscriptome' {
    publishDir = [
      path: { "${params.outDir}/gtf/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
  }

  withName:'getAnnotation' {
    publishDir = [
      path: { "${params.outDir}/gtf/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
  }

  withName:'gffreads' {
    publishDir = [
      path: { "${params.outDir}/gtf/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
  }

  withName:'samtoolsFaidx' {
    publishDir = [
      path: { "${params.outDir}/genome/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
  }

  withName:'createSequenceDictionary' {
    publishDir = [
      path: { "${params.outDir}/genome/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
  }

  withName:'getChromSizes' {
    publishDir = [
      path: { "${params.outDir}/genome/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
  }

  withName:'faSize' {
    publishDir = [
      path: { "${params.outDir}/genome/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
  }

  // Indexes
  withName:'bwaIndex' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = {'bwa' in aligners}
  }
  
  withName:'starIndex' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = {'star' in aligners}
  }

  withName:'bowtie2Index' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = {'bowtie2' in aligners}
  }

  withName:"hisat2IndexFlow*" {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = {'hisat2' in aligners}
  }

  withName:"cellrangerIndexFlow*" {
    //beforeScript = "export PATH=${params.cellRangerPath}:$PATH"
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = {'cellranger' in aligners}
  }

  withName:"kallistoIndexFlow*" {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = {'kallisto' in aligners}
  }

  withName:'salmonIndex' {
    publishDir = [
      path: { "${params.outDir}/indexes/" },
      mode: 'copy',
      saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
    ]
    ext.when = {'salmon' in aligners}
  }
}
